第3章 Pyの具：リスト、タプル、辞書、集合

■リストとタプル
タプルとリストはシーケンス構造。
タプルは一度入れると変更不可、リストは変更可能。

■リスト
[]に,区切りでデータを入れても作成可能だしlist関数を変数に代入してリストにすることもできる。
型は値ごとで何でもいい。一意な値を管理できればいいだけなら集合を使う。
データ型をlist関数でリスト化することも可能。
取り出すには[offset]で。
リストの中にリストを作成することも可能。
その場合は[offset][offset]のような形で取得する。
置き換えるのも[offset]で可能。
要素の追加はappendを利用。末尾に追加できる
extendや+を使えばリストとリストを結合できる。
insertを利用すればオフセットで指定した場所へ追加できる。
delを使えばオフセットを利用した要素の削除が可能。
removeでも可能。その場合は要素を指定する。
popを使うとリストの末尾の値を取り出し削除する。
indexを使えばその要素が入っているリストのオフセットを取得できる。
inを使えばその値がリストに入っているか確認できる。
countを使えば特定の値がリストに何個入っているか確認できる。
joinを使えば文字列に変換できる。
sortはその場でソートする。sortedはソートした結果を返す。
配列を＝でコピーすると同じレジストリを見るので値を変えると両方とも同じように変換される。
レジストリを変えるならcopy関数を利用する。

■タプル
タプルは()を使って作成。イミュータブルなので追加、削除、変更はできない。

■辞書
辞書は{}で作成する。ミュータブルなので追加、削除、変更は可能。
キーと要素で作成される。
dictを使うことで変換可能。
変数['キー'] = 要素で追加可能。すでに追加されているキーを指定したら変更となる。
update関数を利用することで辞書同士を結合できる。
delを使えば削除できる。

clearを使うと要素削除
inを使えば有無の確認。
キーだけ出したいならkey
要素だけならvalue
すべてであればitemで取得可能。

■集合
値を放り出してキーだけを残した集合のようなもの。
何かがあるかさえ分かればいい時に利用する。
作成するときはsetを利用するか{}で,区切りの値を囲めば作成可能。
文字列、リスト、タプル、辞書からも作成可能。
辞書の場合はキーだけ使われる。

inを使うと有無のチェック。
&を使うことで両方ともの集合に含まれた値を集合で返す。1つもなければ空集合となりFalseが返る。
どちらかに含まれているものを出すときは和集合である|を利用。
第1集合に含まれており、第2集合に含まれていないものを探す場合は-を利用。（差集合）
どちらかに含まれていて両方に含まれていないものを探す場合は^を利用。（排他的OR）

<=を利用すれば部分集合が取れる。
真部分集合は<で計算できる。
上位集合は>=で取得可能。

■データ構造の比較
割愛

■もっと大きいデータ構造
組み込みデータ構造を組み合わせることでより大きいデータ構造を作成できる。
